{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSLice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQty: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQty++;\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quanty: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quanty++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const extingItem = state.items.find(item => item.id === id);\n      if (extingItem.quanty === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        extingItem.quanty--;\n        extingItem.totalPrice = extingItem.totalPrice - extingItem.price;\n      }\n    }\n  }\n});\nexport const cartActions = cartSLice.actions;\nexport default cartSLice;","map":{"version":3,"names":["createSlice","cartSLice","name","initialState","items","totalQty","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","itemId","price","quanty","totalPrice","title","removeItemFromCart","extingItem","filter","cartActions","actions"],"sources":["/home/marlene/Downloads/project20/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSLice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQty: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQty++;\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quanty: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quanty++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n\n      const extingItem = state.items.find(item => item.id === id);\n\n      if (extingItem.quanty === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        extingItem.quanty--;\n        extingItem.totalPrice = extingItem.totalPrice - extingItem.price;\n      }\n    }\n  }\n});\n\nexport const cartActions = cartSLice.actions;\n\nexport default cartSLice;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC3B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACrEP,KAAK,CAACH,QAAQ,EAAE;MAChB,IAAI,CAACO,YAAY,EAAE;QACjBJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UACfC,MAAM,EAAEP,OAAO,CAACK,EAAE;UAClBG,KAAK,EAAER,OAAO,CAACQ,KAAK;UACpBC,MAAM,EAAE,CAAC;UACTC,UAAU,EAAEV,OAAO,CAACQ,KAAK;UACzBhB,IAAI,EAAEQ,OAAO,CAACW;QAChB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLT,YAAY,CAACO,MAAM,EAAE;QACrBP,YAAY,CAACQ,UAAU,GAAGR,YAAY,CAACQ,UAAU,GAAGV,OAAO,CAACQ,KAAK;MACnE;IACF,CAAC;IACDI,kBAAkBA,CAACd,KAAK,EAAEC,MAAM,EAAE;MAChC,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MAEzB,MAAMY,UAAU,GAAGf,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAE3D,IAAIQ,UAAU,CAACJ,MAAM,KAAK,CAAC,EAAE;QAC3BX,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACoB,MAAM,CAACV,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC1D,CAAC,MAAM;QACLQ,UAAU,CAACJ,MAAM,EAAE;QACnBI,UAAU,CAACH,UAAU,GAAGG,UAAU,CAACH,UAAU,GAAGG,UAAU,CAACL,KAAK;MAClE;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMO,WAAW,GAAGxB,SAAS,CAACyB,OAAO;AAE5C,eAAezB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}